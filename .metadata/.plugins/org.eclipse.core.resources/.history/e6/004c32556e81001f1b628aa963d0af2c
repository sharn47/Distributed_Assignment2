package com.weather.app;
import static org.junit.jupiter.api.Assertions.*;

import java.io.*;
import java.net.*;
import java.nio.file.*;
import java.util.concurrent.*;

import org.junit.jupiter.api.*;

public class AggregationServerTest {

    private static final int SERVER_PORT = 4567;
    private static ExecutorService serverExecutor;

    @BeforeAll
    public static void startServer() throws IOException {
        serverExecutor = Executors.newSingleThreadExecutor();
        serverExecutor.submit(() -> {
            try {
                AggregationServer.main(new String[]{String.valueOf(SERVER_PORT)});
            } catch (IOException e) {
                e.printStackTrace();
            }
        });
        // Give the server time to start
        try {
            Thread.sleep(1000);
        } catch (InterruptedException e) {
            //
        }
    }

    @AfterAll
    public static void stopServer() {
        serverExecutor.shutdownNow();
    }

    @Test
    public void testPutAndGetRequest() throws Exception {
        // Simulate ContentServer sending data
        String jsonData = "{\"id\":\"IDS60901\",\"name\":\"Adelaide\",\"state\":\"SA\"}";

        // Send PUT request
        Socket socket = new Socket("localhost", SERVER_PORT);
        BufferedWriter out = new BufferedWriter(
                new OutputStreamWriter(socket.getOutputStream()));
        BufferedReader in = new BufferedReader(
                new InputStreamReader(socket.getInputStream()));

        out.write("PUT / HTTP/1.1\r\n");
        out.write("Host: localhost\r\n");
        out.write("Content-Type: application/json\r\n");
        out.write("Content-Length: " + jsonData.length() + "\r\n");
        out.write("Lamport-Clock: 1\r\n");
        out.write("\r\n");
        out.write(jsonData);
        out.flush();

        // Read response
        String statusLine = in.readLine();
        assertEquals("HTTP/1.1 201 Created", statusLine);

        // Close PUT connection
        socket.close();

        // Send GET request
        socket = new Socket("localhost", SERVER_PORT);
        out = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
        in = new BufferedReader(new InputStreamReader(socket.getInputStream()));

        out.write("GET / HTTP/1.1\r\n");
        out.write("Host: localhost\r\n");
        out.write("Lamport-Clock: 2\r\n");
        out.write("\r\n");
        out.flush();

        // Read response
        statusLine = in.readLine();
        assertEquals("HTTP/1.1 200 OK", statusLine);

        String line;
        int contentLength = 0;
        while (!(line = in.readLine()).isEmpty()) {
            if (line.startsWith("Content-Length:")) {
                contentLength = Integer.parseInt(line.substring(15).trim());
            }
        }

        char[] body = new char[contentLength];
        in.read(body);

        String responseBody = new String(body);
        assertTrue(responseBody.contains("\"id\":\"IDS60901\""));
        assertTrue(responseBody.contains("\"name\":\"Adelaide\""));

        // Close GET connection
        socket.close();
    }
}
